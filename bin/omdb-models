#!/usr/bin/env php
<?php

if ($argc !== 3) {
    echo "Usage: omdb-models app/DataModels Project\\\\Namespace" . PHP_EOL;
    exit(1);
}

$targetDir = rtrim($argv[1], '/');
$baseNamespace = $argv[2];

// Adjust as needed if your script is not in the same directory as src.
// E.g.: If script resides in bin/omdb-models, then parent is ../
$srcDir = realpath(__DIR__ . '/../src');

if (!$srcDir) {
    echo "Could not find 'src' directory." . PHP_EOL;
    exit(1);
}

/**
 * Recursively copy files from $src to $dst and update namespaces
 *
 * @param string $src          The source path we’re copying from
 * @param string $dst          The destination path
 * @param string $baseNS       The root/base namespace (e.g., "Project\\Namespace")
 * @param string $relativeNS   The sub-namespace constructed from subfolders
 */
function copy_files(string $src, string $dst, string $baseNS, string $relativeNS = ''): void
{
    // Build the full namespace for this directory level
    // (Remove leading/trailing backslashes if they exist)
    $fullNamespace = trim($baseNS . '\\' . $relativeNS, '\\');

    if (!is_dir($dst)) {
        if (!mkdir($dst, 0777, true) && !is_dir($dst)) {
            throw new RuntimeException(sprintf('Directory "%s" was not created', $dst));
        }
    }

    $handle = opendir($src);
    if (!$handle) {
        throw new RuntimeException(sprintf('Directory "%s" could not be opened', $src));
    }

    while (($file = readdir($handle)) !== false) {
        if ($file === '.' || $file === '..') {
            continue;
        }

        $srcFile = $src . '/' . $file;
        $dstFile = $dst . '/' . $file;

        if (is_dir($srcFile)) {
            // Append the directory name to the sub-namespace
            copy_files(
                $srcFile,
                $dstFile,
                $baseNS,
                // Convert directory name into a valid sub-namespace segment
                trim($relativeNS . '\\' . $file, '\\')
            );
        } else {
            // Copy the file
            copy($srcFile, $dstFile);

            // Replace the namespace line
            $content = file_get_contents($dstFile);
            // Ensure we only change the first "namespace ..." line.
            // If these files do not contain a namespace line, we can optionally skip.
            // For safety, we’ll replace any top-level namespace we find:
            $content = preg_replace(
                '/^namespace\s+.*;/m',
                'namespace ' . $fullNamespace . ';',
                $content
            );

            file_put_contents($dstFile, $content);
            echo "Copied file: $dstFile with namespace $fullNamespace" . PHP_EOL;
        }
    }

    closedir($handle);
}

copy_files($srcDir, $targetDir, $baseNamespace);

echo "DONE" . PHP_EOL;